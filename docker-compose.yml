# Docker Compose configuration for Custom Atomspace Builder

services:
  # Main FastAPI application
  api:
    build: .
    container_name: custom-atomspace-api
    ports:
      - "8000:8000"
    environment:
      - NEO4J_HOST=neo4j
      - NEO4J_PORT=7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=atomspace123
      - NEO4J_DATABASE=neo4j
      - HUGEGRAPH_HOST=hugegraph
      - HUGEGRAPH_PORT=8080
      - HUGEGRAPH_GRAPH=hugegraph
      - ANNOTATION_SERVICE_URL=http://annotation-service:5800/annotation/load
      - ANNOTATION_SERVICE_TIMEOUT=30.0
    depends_on:
      neo4j:
        condition: service_healthy
      hugegraph:
        condition: service_healthy
    volumes:
      - ./output:/app/output
      - ./hugegraph-loader:/app/hugegraph-loader
    networks:
      - atomspace-network
    restart: unless-stopped

  # Neo4j database
  neo4j:
    image: neo4j:5.15-community
    container_name: neo4j-atomspace
    restart: unless-stopped
    ports:
      - "7474:7474"   # HTTP
      - "7687:7687"   # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    environment:
      # Authentication
      - NEO4J_AUTH=neo4j/atomspace123  
      
      # Memory settings
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=512m
      
      # APOC Plugin
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      
      # CSV import settings
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_server_directories_import=import
      
      # Performance
      - NEO4J_server_default__listen__address=0.0.0.0
    networks:
      - atomspace-network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "atomspace123", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # HugeGraph server
  hugegraph:
    image: hugegraph/hugegraph:latest
    container_name: hugegraph-server
    restart: unless-stopped
    ports:
      - "8080:8080"   # REST API
      - "8182:8182"   # WebSocket
    volumes:
      - hugegraph_data:/opt/hugegraph/data
      - hugegraph_logs:/opt/hugegraph/logs
    environment:
      - HUGEGRAPH_GRAPH_NAME=hugegraph
    networks:
      - atomspace-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/graphs/hugegraph/conf"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Hubble UI (optional)
  hubble:
    build: ./hugegraph-hubble
    container_name: hugegraph-hubble
    restart: unless-stopped
    ports:
      - "8088:8088"
    environment:
      - HUGEGRAPH_HOST=hugegraph
      - HUGEGRAPH_PORT=8080
    depends_on:
      hugegraph:
        condition: service_healthy
    networks:
      - atomspace-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Annotation service (placeholder - replace with actual service)
  annotation-service:
    image: busybox:latest
    container_name: annotation-service
    command: ["sh", "-c", "echo 'Annotation service placeholder' && sleep infinity"]
    networks:
      - atomspace-network
    profiles:
      - annotation

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  hugegraph_data:
  hugegraph_logs:

networks:
  atomspace-network:
    driver: bridge 